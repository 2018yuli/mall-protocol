/**
 * 配置管理
 * 简单工厂，单例模式，桥接模式，解释器模式
 * 组合模式，备忘录模式，原型模式，生成器模式，策略模式
 * 
 * 可以通过注册新的provider来提供对新的配置方式的支持
 * 1、配置的方式很多，除了框架自身提供的配置方式外，还要能支持用户自定义的配置方式
 * 2、同一份配置数据，在运行期间会多次使用，但是获取用户配置数据的动作就只需要一次
 * 就可以了，获取过后，就缓存下来。
 * 3、让其他模块通过这些接口来获取他们需要的数据
 * 
 * 1、配置管理模块不关心被访问的数据是怎么来的，它只是按照访问方式去获取这些数据。
 * 不同的数据格式有不同的访问方式
 * 2、这个需要配置的数据项是要统一起来的
 * 3、不关心获取到的数据是什么，含义，怎么用，只负责获取这些数据并保存起来
 * 4、不关心谁来使用这些数据
 */
/**
 * @author l8989
 *
 */
package com.ydual.xgen.genconf;